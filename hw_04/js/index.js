const strSentences = prompt ("Enter sentences", "How much is the fish?");

let operationId = +prompt( `1. –£–∑–Ω–∞—Ç—å unicode –∑–Ω–∞—á–µ–Ω–∏–µ. 
2. –£–¥–∞–ª–∏—Ç—å —Å–∏–º–≤–æ–ª –∏–∑ —Å—Ç—Ä–æ–∫–∏.
3. –ó–∞–º–µ–Ω–∏—Ç—å —Å–∏–º–≤–æ–ª –∏–∑ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–π —Å–º–∞–π–ª–∏–∫.
4. –£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤ –≤ —Å—Ç—Ä–æ–∫–µ (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤). `);

operationId = Math.ceil(operationId);

const IS_UNICOD = 1,
      IS_DELETE_SYMBOL = 2,
      IS_CHANGE_SYMBOL = 3,
      IS_LENGTH_SYMBOL = 4;

let smile = ["üòÄ", "üòÉ", "üòÑ", "üòÅ", "üòÜ", "üòÖ", "ü§£", "üòÇ", "üôÇ", "üôÉ"];
let smileIndex = getRandomIntInclusive(0, 9);
smileIndex = smile[smileIndex];
let showUnicode,
    deleteSymbol,
    changeSymbol,
    lengthSymbol;

if (operationId === IS_UNICOD) {
  operationId = prompt ("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω–¥–µ–∫—Å:");
  showUnicode = strSentences.charCodeAt(operationId);
  alert (`1. Unicode –∑–Ω–∞—á–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: ${showUnicode}`);
} else if (operationId === IS_DELETE_SYMBOL) {
  operationId = +prompt ("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω–¥–µ–∫—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:");
  deleteSymbol = strSentences.substring(0, operationId) 
  + "" + strSentences.substring(operationId + 1);
  alert (`2. –£–¥–∞–ª–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å–∏–º–≤–æ–ª –∏–∑ —Å—Ç—Ä–æ–∫–∏: ${deleteSymbol}`);
} else if (operationId === IS_CHANGE_SYMBOL) {
  operationId = +prompt ("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω–¥–µ–∫—Å –¥–ª—è –∑–∞–º–µ–Ω—ã:");
  changeSymbol = strSentences.substring(0, operationId) 
  + smileIndex + strSentences.substring(operationId + 1);
  alert (`3. –ó–∞–º–µ–Ω–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å–∏–º–≤–æ–ª –∏–∑ —Å—Ç—Ä–æ–∫–∏ (–ø–æ –∏–Ω–¥–µ–∫—Å—É) –Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–π —Å–º–∞–π–ª–∏–∫: ${changeSymbol}`);
} else if (operationId === IS_LENGTH_SYMBOL) {
  lengthSymbol = strSentences.replaceAll(" ", "").length;
  alert (`4. –£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤ –≤ —Å—Ç—Ä–æ–∫–µ (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤): ${lengthSymbol}`);
}

function getRandomIntInclusive(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max); 

  return Math.floor(Math.random() * (max - min + 1) + min);
}


